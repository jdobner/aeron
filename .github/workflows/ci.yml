name: Continuous Integration
on: [push, pull_request]

jobs:
  java-build:
    name: Java ${{ matrix.java }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [ '8', '11' ]
        os: ['ubuntu-latest', 'windows-latest']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Build with Gradle
        run: ./gradlew --no-daemon

  cpp-gcc-build:
    name: C++ GCC ${{ matrix.version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ '6', '7', '8', '9' ]
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper
      - name: Install compiler
        run: |
         sudo apt-get install -y g++-${{ matrix.version }}
      - name: Build
        run: cppbuild/cppbuild --build-archive-api

  cpp-clang-build:
    name: C++ Clang ${{ matrix.version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ '6.0', '7', '8', '9' ]
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper
      - name: Install compiler
        run: |
          sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${{ matrix.version }} main"

          sudo apt-get update

          sudo apt-get install -y clang-${{ matrix.version }} libstdc++-7-dev
      - name: Build
        run: cppbuild/cppbuild --build-archive-api

  cpp-clang-debug-build:
    name: C++ Clang ${{ matrix.version }} debug build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ '7' ]
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper
      - name: Install compiler
        run: |
          sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${{ matrix.version }} main"

          sudo apt-get update

          sudo apt-get install -y clang-${{ matrix.version }} libstdc++-7-dev
      - name: Build
        run: cppbuild/cppbuild --debug-build --build-archive-api

  cpp-clang-macos-build:
    name: C++ Xcode ${{ matrix.version }} (macOS)
    runs-on: macOS-latest
    strategy:
      matrix:
        version: [ '11.2.1' ]
    env:
      CC: clang
      CXX: clang++
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install compiler
        run: |
          sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
      - name: Build
        run: cppbuild/cppbuild --build-archive-api
